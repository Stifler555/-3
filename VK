create database vk;

-- используем БД vk
use vk;

/*
 * 1. Создадим таблицу users.
 */

create table users(
   id BIGINT unsigned auto_increment primary key,
   firstname VARCHAR(50) not null,
   lastname VARCHAR(50) not null,
   phone char(11) not null,
   email varchar(120) unique,
   password_hash CHAR(65), 
   created_at datetime default CURRENT_TIMESTAMP,
   updated_at DATETIME default CURRENT_TIMESTAMP on update CURRENT_TIMESTAMP,
   INDEX(lastname),
   INDEX(phone)
);

show tables;


INSERT INTO users
VALUES (1, 'Petya', 'Petukhov','99999999929', 'petya@mail.com', '81dc9bdb52d04dc20036dbd8313ed055', DEFAULT, DEFAULT);

INSERT INTO users (firstname, lastname, email, password_hash, phone)
VALUES ('Vasya', 'Vasilkov', 'vasya@mail.com', '81dc9bdb52d04dc20036dbd8313ed055', '99999999919');

select * from users;

create table profiles(
    user_id SERIAL primary key, --  bigint unsigned not null auto_increment unique
    gender enum('f', 'm', 'x') not null,
    birhday date not null,
    photo_id bigint unsigned not null,
    city varchar(130),
    country varchar(130),
    foreign key (user_id) references users (id)
);

-- Заполним таблицу, добавим профили для уже созданных Пети и Васи

INSERT INTO profiles VALUES (1, 'm', '1997-12-01', 1, 'Moscow', 'Russia'); -- профиль Пети

INSERT INTO profiles VALUES (2, 'm', '1988-11-02', 5, 'Moscow', 'Russia'); -- профиль Васи

SELECT * FROM profiles;

create table messages (
    id SERIAL,
    from_user_id bigint unsigned not null,
    to_user_id bigint unsigned not null,
    body TEXT,
    create_at DATETIME default NOW(),
    updated_at DATETIME default current_TIMESTAMP on update current_TIMESTAMP,
    is_delivered boolean default false,
    foreign key (from_user_id) references users (id),
    foreign key (to_user_id) references users (id)
);

INSERT INTO messages VALUES (DEFAULT, 1, 2, 'Hi!', DEFAULT, DEFAULT, DEFAULT); -- сообщение от Пети к Васе номер 1
INSERT INTO messages VALUES (DEFAULT, 1, 2, 'Vasya!', DEFAULT, DEFAULT, DEFAULT); -- сообщение от Пети к Васе номер 2
INSERT INTO messages VALUES (DEFAULT, 2, 1, 'Hi, Petya', DEFAULT, DEFAULT, DEFAULT); -- сообщение от Пети к Васе номер 2

SELECT * FROM messages;

CREATE TABLE friend_requests(
	from_user_id BIGINT UNSIGNED NOT NULL,
	to_user_id BIGINT UNSIGNED NOT NULL,
	accepted BOOL DEFAULT FALSE,
	PRIMARY KEY(from_user_id, to_user_id),
	FOREIGN KEY (from_user_id) REFERENCES users (id),
	FOREIGN KEY (to_user_id) REFERENCES users (id)
);

-- Добавим запрос на дружбу от Пети к Васе
INSERT INTO friend_requests VALUES (1, 2, 1);

CREATE TABLE communities(
	id SERIAL primary key,
	name VARCHAR(145) NOT NULL,
	description VARCHAR(255),
	admin_id BIGINT UNSIGNED NOT NULL,
	INDEX communities_name_idx (name),
	CONSTRAINT fk_communities_admin_id FOREIGN KEY (admin_id) REFERENCES users (id) 
);

INSERT INTO communities VALUES (DEFAULT, 'Number1', 'I am number one', 1);

CREATE TABLE communities_users(
	community_id BIGINT UNSIGNED NOT NULL,
	user_id BIGINT UNSIGNED NOT NULL,
	PRIMARY KEY(community_id, user_id),
	FOREIGN KEY (community_id) REFERENCES communities (id),
	FOREIGN KEY (user_id) REFERENCES users (id) 
);

INSERT INTO communities_users VALUES (1, 2);

CREATE TABLE media_types(
	id INT UNSIGNED NOT NULL AUTO_INCREMENT PRIMARY KEY,
	name VARCHAR(45) NOT NULL UNIQUE
);

INSERT INTO media_types VALUES (DEFAULT, 'изображение');
INSERT INTO media_types VALUES (DEFAULT, 'музыка');
INSERT INTO media_types VALUES (DEFAULT, 'документ');

SELECT * FROM media_types;


CREATE TABLE media(
	id SERIAL PRIMARY KEY,
	user_id BIGINT UNSIGNED NOT NULL,
	media_types_id INT UNSIGNED NOT NULL,
	file_name VARCHAR(255),
	file_size BIGINT UNSIGNED,
	created_at DATETIME NOT NULL DEFAULT CURRENT_TIMESTAMP,
	FOREIGN KEY (user_id) REFERENCES users (id),
	FOREIGN KEY (media_types_id) REFERENCES media_types (id)
);

-- Добавим два изображения, которые добавил Петя
INSERT INTO media VALUES (DEFAULT, 1, 1, 'im.jpg', 100, DEFAULT);
INSERT INTO media VALUES (DEFAULT, 1, 1, 'im1.png', 78, DEFAULT);

-- Добавим документ, который добавил Вася
INSERT INTO media VALUES (DEFAULT, 2, 3, 'doc.docx', 1024, DEFAULT);
SELECT * FROM media;

CREATE TABLE photo_types(
	id INT UNSIGNED NOT NULL AUTO_INCREMENT PRIMARY KEY,
	name VARCHAR(45) NOT NULL UNIQUE
);

INSERT INTO photo_types VALUES (DEFAULT, 'Фотографии');

SELECT * FROM photo_types;


create table photo_album(
    id SERIAL PRIMARY KEY,
	user_id BIGINT UNSIGNED NOT NULL,
	photo_types_id INT UNSIGNED NOT NULL,
	file_name VARCHAR(200),
	file_size BIGINT UNSIGNED,
	created_at DATETIME NOT NULL DEFAULT CURRENT_TIMESTAMP,
	FOREIGN KEY (user_id) REFERENCES users (id),
	FOREIGN KEY (photo_types_id) REFERENCES photo_types (id)
); 

INSERT INTO photo_album VALUES (DEFAULT, 1, 1, 'selfi1.jpg', 215, DEFAULT);
INSERT INTO photo_album VALUES (DEFAULT, 2, 1, 'selfi2.png', 350, DEFAULT);

SELECT * FROM photo_album;

CREATE TABLE tovar(
    articul smallint not null,
    type varchar(50) not null,
    firm varchar(50) not null,
    description varchar(50) not null,
    primary key (articul)
);

INSERT INTO tovar VALUES (100, 'usb flash drive', 'kingston', '2Gb'),
(105, 'hdd', 'toshiba', '160Gb');

SELECT * FROM tovar;



